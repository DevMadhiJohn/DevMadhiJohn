{
  "React Native Component": {
    "prefix": "imrnc",
    "body": [
      "import React, { Component } from \"react\";",
      "import { \n\tView,\n\tText,\n} from \"react-native\";",
      "\nclass ${1:componentName} extends Component {",
      "\trender() {",
      "\t\treturn (",
      "\t\t\t<View style={{flex: 1}}>",
      "\t\t\t\t<Text>${1:componentName}</Text>",
      "\t\t\t</View>",
      "\t\t);",
      "\t}",
      "}",
      "export default ${1:componentName};"
    ],
    "description": "React Component"
  },
  "Create StyleSheet": {
    "prefix": "imrnss",
    "body": ["const styles = StyleSheet.create({", "\n$0", "\n});\n"],
    "description": "Const Styles"
  },
  "console.log": {
    "prefix": "clog",
    "body": ["console.log(${1:})"],
    "description": "console.log"
  },
  "React Native Pan Responder": {
    "prefix": "imrnp",
    "body": [
      "this.panResponder = PanResponder.create({",
      "\n\tonMoveShouldSetPanResponder: (evt, gestureState) => true,",
      "\tonPanResponderGrant: (evt, gestureState) =>{",
      "\n\t},",
      "\tonPanResponderMove: (evt, gestureState) => {",
      "\n\t},",
      "\tonPanResponderRelease: (evt, gestureState) => {",
      "\n\t},",
      "\n})"
    ],
    "description": "React Native Pan Responder"
  },
  "React Native Functional Component": {
    "prefix": "imrnfc",
    "body": [
      "import React from \"react\";",
      "import { \n\tView,\n\tText,\n} from \"react-native\";",
      "\nconst ${1:componentName} = (props) => {return(",
      "\t\t<View style={{flex: 1}}>",
      "\t\t\t<Text>${1:componentName}</Text>",
      "\t\t</View>",
      "\t\t)}",
      "export default ${1:componentName};"
    ],
    "description": "React Native Functional Component"
  },
  "React Native Map Function": {
    "prefix": "rnmap",
    "body": [
      "return ${1:items}.map((item,index)=>{",
      "\treturn(",
      "\t\t${2:<View></View>}",
      ")})"
    ],
    "description": "javscript map method"
  },
  "React Native Dimensions": {
    "prefix": "rndime",
    "body": ["const {width,height} = Dimensions.get('window')"],
    "description": "Dimensions RN"
  },
  "React Native Component Only": {
    "prefix": "rncomp",
    "body": [
      "\nclass ${1:componentName} extends Component{",
      "\trender(){",
      "\t\treturn (",
      "\t\t\t<View style={{flex:1,alignItems:'center',justifyContent:'center'}}>",
      "\t\t\t\t<Text>${1:componentName}</Text>",
      "\t\t\t</View>",
      "\t\t);",
      "\t}",
      "}"
    ],
    "description": "New React Native Component"
  },
  "React Native Functional Component Only": {
    "prefix": "rnfcomp",
    "body": [
      "\nconst ${1:componentName} = (props) => (",
      "\t<View style={{flex:1,alignItems:'center',justifyContent:'center'}}>",
      "\t\t<Text>${1:componentName}</Text>",
      "\t</View>",
      ")"
    ],
    "description": "New React Native Component"
  }
}
